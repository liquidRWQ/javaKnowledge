1.ArrayList

底层是数组，数组的长度动态增加，初始长度是10，每次扩容0.5倍。查找快

2.LinkedList
底层是双链表，数组的长度动态增加，初始长度是10，每次扩容0.5倍 修改快

3.HashMap
底层是散列表，红黑树。散列表又数组和链表构成，放入HashMap的键值对首先通过计算key对象的hash值来获得插入数组的索引值，从而将value对象放入数组中，该索引
的引用链指向这个key对象。如果再次放入的对象计算得到的hash值相同，就会调用key对象的equals方法进行判断，如果是true，说明两个key对象是同一个对象，新的value
值覆盖掉数组里久的value值，如果是false，说明是新的key对象，就产生了哈希冲突，引用链上的原来的key对象就会指向现在添加的key对象，新的value对象覆盖掉久的value
对象。
hashmap的初始容量是16，负载因子是0.75，所以存储的数据超过12个就开始扩容，每次扩容是之前的两倍，当扩容到64，同时又一条引用链上的key对象达到8个时，HashMap
为了避免哈希冲突导致的性能下降就会讲底层数据结构转成红黑树，变成TreeMap。
