1.mysql的引擎
默认是InnoDB,还有MyISAM，Memory等

2.InnoDB和MyISAM引擎的区别
InnoDB支持事务，MyISAM不支持
InnoDB支持外键，MyISAM不支持
InnoDB支持行锁，MyISAM不支持
InnoDB针对更新和插入操作有更好地安全性。MyISAM查询性能好，速度快。

3.数据库的范式
主要遵循
第一范式，第二范式，第三范式
第一范式：属性不可再分
第二范式：其他属性依赖于主属性（消除子函数依赖）
第三范式：其他属性不依赖于非主属性（消除传递依赖）

3.事务的特性（ASID）

原子性 （保证一系列的操作是整体）

一致性 （操作要么同时成功，要么同时失败）

隔离性 用MVCC和锁来实现

持久性 用log来实现

4.事务的隔离级别

读未提交，会发生脏读，不可重复读，幻读现象

读已提交，会发生不可重复读，幻读现象。

可重复读。会发生幻读现象。mysql的默认事务隔离级别，mysql使用gip锁能避免幻读现象。

串行化。可以避免脏读，不可重复读和幻读，最安全，但是效率最低。

5.存储过程的作用

存储过程类似java的方法，由于sql语句是先编译后执行的，设置存储过程能让sql语句预编译好，提高运行效率。

6.mysql索引
索引是使数据有序易查找的数据结构。
mysql的数据是用页来存储的，每个页与页之间用双链表连接，每页的数据项又用单链表连接。建立索引后，就会形成一个B+树的数据结构，最底层的叶子结点存放
表的数据记录，从最底层往上就是多级目录页，每层的结点之间都用双链表连接。用索引查询表记录时就通过根节点的目录项一层层往下查找。 B+树是一种平衡多路查找树。这种数据结构可以使数据
比较多时也能保持比较矮的形态，树的层数较少，就能减少IO操作的次数，加快查找效率。

mysql索引分为聚集索引和非聚集索引。
聚集索引一般用主键建立，索引的最底层的叶子结点存放的都是完整的数据记录。InnoDB引擎默认会自动创建聚集索引
非聚集索引一般用非主键建立，索引的最底层的叶子结点存放的是主键和对应列属性。用非聚集索引查询数据的完整记录要用聚集索引再查一遍，这一部也叫回表。
非聚集索引也叫二级索引

优点：减少数据查找量，减少了IO次数，加快数据查找速度。 
      对数据进行类排序处理。
缺点：建立索引要一定的空间
      对表进行更新和插入和删除时需要同时维护索引，降低了修改速度
      查找的数据量如果比较大时效率不如全表扫描
      
7.索引失效

查询条件中有or时不会使用索引
用字符串做索引值时如果没有加引号就不会使用到索引
不符合最左匹配原则。
查询的条件范围超过一定百分比，mysql会自动优化采用全表查询。


8.最左匹配原则（mysql会优化）

假设用字段（A，B，C）创建复合索引后 ，如果查找的条件是where B=‘’，不会使用索引， 条件是where A=1,B>5,只会对A使用索引

9.行锁和表锁

行锁是InnoDB引擎特有的锁，是加在索引上的锁，行锁开销大，容易发生死锁，发送锁冲突（不嫩共存的锁共存了）的概率低。
表锁是表级的，开销小，不会发生死锁，发生锁冲突的概率高

行锁和表锁分为读锁和写锁，读锁是共享锁，写锁是排他锁，读锁和写锁也不能共存。
为了允许行锁和表锁共存，实现多粒度锁机制，InnoD用了意向锁。

10.MVVC

多版本并发控制 InnoDB的MVVC是在每行数记录后面保存两个隐藏列，一个存行的创建时间，一个存行的过期时间，形成一个系统版本号，在查找的时候就只查找系统版
本号小于当前事务系统版本号的行。

11.间隙锁GAP

用范围条件查询数据时，对于在条件范围内但是并不存在的纪录叫做间隙，对其加锁，防止幻读。

12.死锁怎么办

降低隔离级别，用索引查找数据，将事务减小






      
